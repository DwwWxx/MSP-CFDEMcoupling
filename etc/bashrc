#------------------------------------------------------------------------------
# MSP-CFDEMcoupling
# Script
#     etc/bashrc
# Description
#     Startup file for MSP-CFDEMcoupling environment variables
# Author
#     Wang Ding
# Dec 2020
#------------------------------------------------------------------------------

# Add this block to your ~/.bashrc and modify for your installation

# STANDARD BLOCK FOR REGULAR INSTALLATIONS
##-----------------------------------------------------------------------------
## source cfdem env vars
#export CFDEM_VERSION=PUBLIC
#export CFDEM_PROJECT_DIR=$HOME/CFDEM/CFDEMcoupling-$CFDEM_VERSION-$WM_PROJECT_VERSION
#export CFDEM_bashrc=$CFDEM_PROJECT_DIR/src/lagrangian/cfdemParticle/etc/bashrc
#export CFDEM_LIGGGHTS_SRC_DIR=$HOME/LIGGGHTS/LIGGGHTS-PUBLIC/src
#export CFDEM_LIGGGHTS_MAKEFILE_NAME=auto
#export CFDEM_LPP_DIR=$HOME/LIGGGHTS/mylpp/src
#. $CFDEM_bashrc
##-----------------------------------------------------------------------------
## source msp-cfdem env vars
#export MSP_CFDEM_PROJECT_DIR=$HOME/CFDEM/MSP-CFDEMcoupling-$WM_PROJECT_VERSION
#export MSP_CFDEM_bashrc=$MSP_CFDEM_PROJECT_DIR/etc/bashrc
## source other env vars which will be used in ". $MSP_CFDEM_bashrc"
#export MSP_CFDEM_VERBOSE=false
#. $MSP_CFDEM_bashrc
##-----------------------------------------------------------------------------
## define multi version coexistence
#export MSP_CFDEM_VERBOSE=false
## . $MSP_CFDEM_bashrc
#alias cfdem="source $HOME/CFDEM/MSP-CFDEMcoupling-$WM_PROJECT_VERSION/etc/bashrc"
#alias cfdem_debug="source $HOME/CFDEM/MSP-CFDEMcoupling-debug/etc/bashrc"
##-----------------------------------------------------------------------------

echo_()
{
  if [ "true" = $MSP_CFDEM_VERBOSE ]; then echo "$1"; fi
}

add_path_()
{
  for path in "$@"; do
    export PATH="$path":"$PATH"
  done
}

add_ld_lib_path_()
{
  for path in "$@"; do
    export LD_LIBRARY_PATH="$path":"$LD_LIBRARY_PATH"
  done
}

set_var_() {
  # define variables
  env_variable="$1"
  default_value="$2"
  # get current env value of $env_variable
  cur_value=$(eval echo \$$env_variable)
  if [[ "$cur_value" == "" ]]; then
    # not set for env variable and use defualt value
    eval export $env_variable="$default_value"
    echo_ "using default $env_variable = $default_value"
  else
    echo_ "using user defined $env_variable = $cur_value"
  fi
}

#- Set OpenFOAM project dir
export MSP_OF_PROJECT_DIR=$FOAM_INST_DIR/$WM_PROJECT-$WM_PROJECT_VERSION

#- Set MSP-CFDEM EVs
# MSP_CFDEM_PROJECT_DIR is the location of the CFDEM installation which defaults to
# the directory containing this file if sourced by a bash shell.
export MSP_CFDEM_PROJECT_DIR=$(cd $(dirname ${BASH_SOURCE:-$0})/.. && pwd -P)
export MSP_CFDEM_ETC_DIR=$MSP_CFDEM_PROJECT_DIR/etc
export MSP_CFDEM_SOLVERS_DIR=$MSP_CFDEM_PROJECT_DIR/solvers
export MSP_CFDEM_SRC_DIR=$MSP_CFDEM_PROJECT_DIR/src
export MSP_CFDEM_TEST_DIR=$MSP_CFDEM_PROJECT_DIR/test
export MSP_CFDEM_TOOLS_DIR=$MSP_CFDEM_PROJECT_DIR/tools
export MSP_CFDEM_bashrc=$MSP_CFDEM_ETC_DIR/bashrc
if [[ "$MSP_CFDEM_PROJECT_DIR" = *"-debug" ]]; then
  echo "Load cfdem debug environment - done"
elif [[ "$MSP_CFDEM_PROJECT_DIR" = *"-us" ]]; then
  echo "Load cfdem upward seepage environment - done"
else
  echo "Load cfdem environment - done"
fi

#- Set MSP-CFDEM lib name
export MSP_CFDEM_LIB_DIR=$MSP_CFDEM_PROJECT_DIR/platforms/$WM_OPTIONS/lib
export MSP_CFDEM_BIN_DIR=$MSP_CFDEM_PROJECT_DIR/platforms/$WM_OPTIONS/bin

#- Set LIGGGHTS EVs
set_var_ LIGGGHTS_DIR $HOME/LIGGGHTS/LIGGGHTS-PUBLIC
set_var_ LIGGGHTS_SRC_DIR $LIGGGHTS_DIR/src
set_var_ LPP_DIR $HOME/LIGGGHTS/lpp
set_var_ LIGGGHTS_MAKEFILE_NAME "auto"
set_var_ LIGGGHTS_MAKEFILE_POSTFIX ""

set_var_ MSP_CFDEM_MPI SYSTEMOPENMPI
set_var_ MSP_CFDEM_MPI_DIR `mpicc --showme:link | sed -e 's/.*-L\([^ ]*\).*/\1/'`

#- MSP-CFDEM lib name
export MSP_CFDEM_LIB_DIR=$MSP_CFDEM_PROJECT_DIR/platforms/$WM_OPTIONS/lib
export MSP_CFDEM_BIN_DIR=$MSP_CFDEM_PROJECT_DIR/platforms/$WM_OPTIONS/bin

#- Important! add lib dir to $LD_LIBRARY_PATH
# If not add lib dir to $LD_LIBRARY_PATH, loader will not find dynamic lib file and report error:
# "cannot open shared object file: No such file or directory"
add_ld_lib_path_ $MSP_CFDEM_LIB_DIR

#check if default lammps lib path should be used
set_var_ LAMMPS_LIB_DIR $LIGGGHTS_DIR/lib

#- LIGGGHTS lib name
if [[ "auto" != $LIGGGHTS_MAKEFILE_NAME ]]; then
  echo_ "Error: LIGGGHTS_MAKEFILE_NAME must be \"auto\"!"
fi
if [[ "" != $LIGGGHTS_MAKEFILE_POSTFIX ]]; then
  export LIGGGHTS_LIB_NAME="lmp_"$LIGGGHTS_MAKEFILE_NAME"_"$LIGGGHTS_MAKEFILE_POSTFIX
else
  export LIGGGHTS_LIB_NAME="lmp_"$LIGGGHTS_MAKEFILE_NAME
fi
#- LIGGGHTS lib path
set_var_ LIGGGHTS_LIB_PATH $LIGGGHTS_SRC_DIR

#- LIGGGHTS executable
set_var_ LIGGGHTS_EXEC $LIGGGHTS_LIB_NAME

#- LAMMPS lib path
set_var_ LAMMPS_LIB_PATH $LIGGGHTS_DIR/lib

alias mspCfdemCompLIG='bash $MSP_CFDEM_ETC_DIR/compile_LIGGGHTS.sh'
alias mspCfdemCompSrc='bash $MSP_CFDEM_ETC_DIR/compile_MSP_CFDEMcoupling_src.sh'
alias mspCfdemCompSolver='bash $MSP_CFDEM_ETC_DIR/compile_MSP_CFDEMcoupling_solver.sh'

# detect OF version
if [[ $WM_PROJECT_VERSION == 5.* ]]; then
  export MSP_CFDEM_WM_PROJECT_VERSION=50
elif [[ $WM_PROJECT_VERSION == 4.* ]]; then
  export MSP_CFDEM_WM_PROJECT_VERSION=40
  echo "WARNING from your MSP-CFDEM code!"
  echo "WARNING: Coupling with your OpenFOAM(R) version is not officially supported!"
  echo "Switch to OpenFOAM(R) 5.x."
  sleep 1
elif [[ $WM_PROJECT_VERSION = 3.0.* ]]; then
  export MSP_CFDEM_WM_PROJECT_VERSION=30
  echo "WARNING from your MSP-CFDEM code!"
  echo "WARNING: Coupling with your OpenFOAM(R) version is not officially supported!"
  echo "Switch to OpenFOAM(R) 5.x."
  sleep 1
elif [[ $WM_PROJECT_VERSION = v1606+ ]]; then
  export MSP_CFDEM_WM_PROJECT_VERSION=1606
  echo "WARNING from your MSP-CFDEM code!"
  echo "WARNING: Coupling with your OpenFOAM(R) version is not officially supported!"
  echo "Switch to OpenFOAM(R) 5.x."
  sleep 1
elif [[ $WM_PROJECT_VERSION = v1612+ ]]; then
  export MSP_CFDEM_WM_PROJECT_VERSION=1612
  echo "WARNING from your MSP-CFDEM code!"
  echo "WARNING: Coupling with your OpenFOAM(R) version is not officially supported!"
  echo "Switch to OpenFOAM(R) 5.x."
  sleep 1
elif [[ $WM_PROJECT_VERSION = v1706 ]]; then
  export MSP_CFDEM_WM_PROJECT_VERSION=1706
  echo "WARNING from your MSP-CFDEM code!"
  echo "WARNING: Coupling with your OpenFOAM(R) version is not officially supported!"
  echo "Switch to OpenFOAM(R) 5.x."
  sleep 1
elif [[ $WM_PROJECT_VERSION = 2.4.* ]]; then
  export MSP_CFDEM_WM_PROJECT_VERSION=24
  echo "WARNING from your MSP-CFDEM code!"
  echo "WARNING: Coupling with your OpenFOAM(R) version is not officially supported!"
  echo "Switch to OpenFOAM(R) 5.x."
  sleep 1
elif [[ $WM_PROJECT_VERSION == "3.2" && $WM_FORK == "extend" ]]; then
  export MSP_CFDEM_WM_PROJECT_VERSION=132
  echo "WARNING from your MSP-CFDEM code!"
  echo "WARNING: Coupling with your OpenFOAM(R) version is not officially supported!"
  echo "Switch to OpenFOAM(R) 5.x."
  sleep 1
else
  echo "ERROR from your CFDEM code!"
  echo "ERROR: your OpenFOAM(R) version is not supported!"
  echo "Switch to OpenFOAM(R) 5.x."
  sleep 2
fi

unset echo_
unset add_path_
unset set_var_
